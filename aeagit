#!/bin/bash
AEASRC=git@bitbucket.org:aeaverification
AEAHSRC=bitbucket.org/aeaverification
call=$0
os=$(uname)
codeeditor="$(which code)"
silent=""
DEPTH=10

function code {
    case $os in
	    Linux|Darwin|MING*)
		    "$codeeditor" "$1"
		    ;;
	    *)
		    echo "Open $1 with editor of your choice"
		    ;;

    esac
    }

if [[ -z $1 ]]
then
  cat << EOF
  $0 (number) [(method)]

  will check out the repo from the AEA repository at
    $AEASRC
  into the local directory, enter the directory, and open 
  an editor with the REPLICATION.md file.

  Arguments:
    (number): the numerical part of the AEAREP-nnnn *repository* 
              (not ticket)
    (method): (optional) method of connecting (ssh or https, 
               can be abbreviated)
  The connection method should default to the right thing according
  to the environment. For ssh, you need to have set up the SSH key.
  For https, it will use other authentication methods on your 
  machine (e.g., Github Desktop) if available. In the cloud, 
  set the variables P_BITBUCKET_PAT and P_BITBUCKET_USERNAME, see README.
EOF
else
manuscript=$1
repo=aearep-$manuscript
_method=$2

case $_method in 
  silent)
  silent="echo"
  ;;
  *)
  silent=""
esac

case $_method in
    s*|S*)
       method=ssh
       ;;
    h*|H*)
       method=https
       ;;
    *)
       # this sets it to HTTPS for CodeSpace
       [[ -z $CODESPACE_NAME ]] && method=ssh || method=https
       # This defaults to HTTPS when running on Git Bash
       case $os in
	        MING*)
		       method=https
		    ;;
	     esac
    ;;
esac

authinfo=$3

# construct URL and query other parameters if necessary

case $method in
  ssh)
    GITURL="$AEASRC/$repo.git"
    ;;
  https)
    # we need username and PAT
    # try git credentials first
    if [[ -f $HOME/.git-credentials ]]
      then
        authinfo=$(grep bitbucket $HOME/.git-credentials)
        authinfo=${authinfo##*/}
        authinfo=${authinfo%@*}
    fi
    # Check to see if that's good, if not use environment variables
    if [[ -z $authinfo ]]
    then
      if [[ ! -z $P_BITBUCKET_PAT && ! -z $P_BITBUCKET_USERNAME ]]
      then
       authinfo=${P_BITBUCKET_USERNAME}:${P_BITBUCKET_PAT}
      fi
    fi
    # now lets see where we are at.
    if [[ -z $authinfo ]]
    then
      echo "We will use pre-configured credentials for git."
      echo "If this does not work, run "
      echo "   git config --global credential.helper store "
      echo "and try again, using the following syntax:"
      echo "   $0 $manuscript https USERNAME:PAT"
      echo "where "
      echo "    USERNAME is your Bitbucket username"
      echo "    PAT is your Bitbucket personal access token (note the colon)"
      echo "If running on Codespaces:"
      echo " - see configuration notes about P_BITBUCKET_PAT"
      echo " - candidate PAT: $P_BITBUCKET_PAT (if configured)"
      echo " --- "
      GITURL="https://$AEAHSRC/$repo.git"
    else
      GITURL="https://${authinfo}@$AEAHSRC/$repo.git"
    fi
    ;;
esac

if [[ -d $repo ]]
then 
  echo "Repo $repo already exists - updating only"
else
  git clone $GITURL
fi

# directory should exist now
if [[ -d $repo ]]
then
  cd $repo && git pull --depth $DEPTH
  if [[ -f REPLICATION.md ]]
  then
     case $os in
        Linux|MING*) 
	  $silent code . REPLICATION.md
	  ;;
	Darwin)
	  $silent open -a "Visual Studio Code" . REPLICATION.md
	  ;;
    esac
  fi
else
  echo "Git clone failed"
fi

echo "Done"
echo "Type cd $repo or code $repo and start your work."
case $os in
	Linux)
  [[ -z $(which xclip) ]] || echo "cd $repo" | xclip -selection c
;;
   Darwin)
     echo "cd $repo" | pbcopy
     ;;
esac
fi
